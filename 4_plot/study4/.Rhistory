}
# get data
data = read.csv(file.path(datapath, 'beh_desc_group12_09-Sep-2024.csv'))
# prepare data for plotting:
data2plotcor <- data%>%pivot_longer(.,c('S1_cor','S2_cor','P1_cor','P2_cor','G1_cor','G2_cor'),names_to=c('varnames'),values_to ='correct')
data2plotcor <- mutate(data2plotcor, group = ifelse(varnames %in% c("S1_cor", "P1_cor","G1_cor"), "Dec1", "Dec2"))
data2plotcor <- adjustLab(data2plotcor, varnames,  c('S1_cor'='S','S2_cor'='S','P1_cor'='P','P2_cor'='P','G1_cor'='G','G2_cor'='G'))
data2plotrt <- data%>%pivot_longer(.,c('S1_rt','S2_rt','P1_rt','P2_rt','G1_rt','G2_rt'),names_to=c('varnames'),values_to ='RT')
data2plotrt <- mutate(data2plotrt, group = ifelse(varnames %in% c("S1_rt", "P1_rt","G1_rt"), "Dec1", "Dec2"))
data2plotrt <- adjustLab(data2plotrt, varnames,  c('S1_rt'='S','S2_rt'='S','P1_rt'='P','P2_rt'='P','G1_rt'='G','G2_rt'='G'))
corplot = doPlot(data2plotcor,'correct',darks,c(.5,1),'%correct')
rtplot = doPlot(data2plotrt,'RT',darks,c(.5,4),'Reaction time (in sec)')
# arrange, plot and save:
desc12plot=ggarrange(corplot,rtplot,ncol=2,nrow=1,heights=c(1,1), labels=c('A','B'),align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('FigS3_beh_desc_group12_',Sys.Date(),'.pdf',sep=''),plot=desc12plot,path=path_figs,dpi = 300, device = "pdf", height=3,width=7)
# arrange, plot and save:
desc12plot=ggarrange(corplot,rtplot,ncol=2,nrow=1,heights=c(1,1), labels=c('g','h'),align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2gh_beh_desc_group12_',Sys.Date(),'.pdf',sep=''),plot=desc12plot,path=path_figs,dpi = 300, device = "pdf", height=3,width=7)
# get data
data = read.csv(file.path(datapath, 'beh_rdm2dec_09-Sep-2024.csv'))
ss = doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"ss","Exp: Self",c(0.45,.8),yellows[2])
pp = doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"pp","Exp: Partner",c(0.45,.8),blues[2])
o1 = doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"o1","Exp: O1",c(0.45,.8),'black')
o2 = doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"o2","Exp: O2",c(0.45,.8),'black')
vds= doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"swin","Exp: Self-win rate",c(0,1),yellows[2])
vdg= doCorPlot(data,"rdm",'Pre-Exp: Self',c(0.45,.8),"gwin","Exp: Group-win rate",c(0,1),reds[2])
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=4,nrow=2, labels=c('A','B','C','D','E','F'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('FigS2_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=6,width=12)
corpls
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=6,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=4,nrow=2, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=6,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=3,nrow=3, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=6,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=3,nrow=3, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=12,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=3,nrow=3, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=10,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=3,nrow=3, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=8,width=12)
corpls =ggarrange(ss,pp,o1,o2,vds,vdg, ncol=3,nrow=3, labels=c('a','b','c','d','e','f'),hjust = .05, align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig2a-f_beh_rdm2dec_',Sys.Date(),'.pdf',sep=''),plot=corpls,path=path_figs,dpi = 300, device = "pdf", height=10,width=12)
# get data
data = read.csv(file.path(datapath, 'beh_glm_group12_09-Sep-2024.csv'))
# prepare data for plotting:
data2plots <- data%>%pivot_longer(.,c('Sglm1.S','Sglm2.S','Sglm1.P','Sglm2.P','Sglm1.Or','Sglm2.Or','Sglm1.Oi','Sglm2.Oi','Sglm1.bonus','Sglm2.bonus'),names_to=c('varnames'),values_to ='beta')
data2plots <- mutate(data2plots, group = ifelse(varnames %in% c("Sglm1.S","Sglm1.P","Sglm1.Or","Sglm1.Oi","Sglm1.bonus"), "Dec1", "Dec2"))
data2plots <- adjustLab(data2plots, varnames,  c('Sglm1.S'='S','Sglm2.S'='S','Sglm1.P'='P','Sglm2.P'='P','Sglm1.Or'='Or','Sglm2.Or'='Or','Sglm1.Oi'='Oi','Sglm2.Oi'='Oi','Sglm1.bonus'='B','Sglm2.bonus'='B'))
data2plotp =data%>%pivot_longer(.,c('Pglm1.S','Pglm2.S','Pglm1.P','Pglm2.P','Pglm1.Or','Pglm2.Or','Pglm1.Oi','Pglm2.Oi','Pglm1.bonus','Pglm2.bonus'),names_to=c('varnames'),values_to ='beta')
data2plotp= mutate(data2plotp, group = ifelse(varnames %in% c("Pglm1.S","Pglm1.P","Pglm1.Or","Pglm1.Oi","Pglm1.bonus"), "Dec1", "Dec2"))
data2plotp <- adjustLab(data2plotp, varnames,  c('Pglm1.S'='S','Pglm2.S'='S','Pglm1.P'='P','Pglm2.P'='P','Pglm1.Or'='Or','Pglm2.Or'='Or','Pglm1.Oi'='Oi','Pglm2.Oi'='Oi','Pglm1.bonus'='B','Pglm2.bonus'='B'))
data2plotg =data%>%pivot_longer(.,c('Gglm1.S','Gglm2.S','Gglm1.P','Gglm2.P','Gglm1.O1','Gglm2.O1','Gglm1.O2','Gglm2.O2','Gglm1.bonus','Gglm2.bonus'),names_to=c('varnames'),values_to ='beta')
data2plotg= mutate(data2plotg, group = ifelse(varnames %in% c("Gglm1.S","Gglm1.P","Gglm1.O1","Gglm1.O2","Gglm1.bonus"), "Dec1", "Dec2"))
data2plotg <- adjustLab(data2plotg, varnames,  c('Gglm1.S'='S','Gglm2.S'='S','Gglm1.P'='P','Gglm2.P'='P','Gglm1.O1'='O1','Gglm2.O1'='O1','Gglm1.O2'='O2','Gglm2.O2'='O2','Gglm1.bonus'='B','Gglm2.bonus'='B'))
splot = doPlot(data2plots,'beta',yellows,c(-2,2),'Decision weight')
pplot = doPlot(data2plotp,'beta',blues,c(-2,2),'Decision weight')
gplot = doPlot(data2plotg,'beta',reds,c(-2,2),'Decision weight')
glmplot=ggarrange(splot,pplot, gplot, ncol=3,nrow=1,heights=c(1,1),widths = c(1.5,1.5), labels=c('d','e','f'), align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig7d-f_beh_glm_group12_',Sys.Date(),'.pdf',sep=''),plot=glmplot,path=path_figs,dpi = 300, device = "pdf", height=3,width=9)
load packages
library(tidyverse);       # data (frame) handling functions
library(dplyr);
library(ggplot2);
library(ggpubr);          # wrapper package to execute ggplot
library(RColorBrewer)
library(ggnewscale)
# prep environment
rm(list=ls()) # removes all variables
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
datapath='../../3_out/study1'
path_figs='../../5_figs/study1'
yellows = c('#FFEDAD','#FFC455')
darkyellows = c('#e9cd62','#fca400')
blues   = c('#93A3FF','#5044FF')
reds = c("#eaaeb6","#CB3448")
darks  = c('#ffffff','#333333')
#### general plotting function:
# make plotting function that works for both data frames
doPlot <- function(data,vars,cols,ylimits,ylab) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='group',position= position_dodge(0.75),xlab='', ylab = ylab,ylim = ylimits,) +
geom_hline(yintercept = 0) +
geom_jitter(aes(size=group),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=c(.5,.5))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=group),position= position_dodge(0.75)) +
scale_color_manual(values = c('black','black')) + # colors just for overlay errorbar
scale_fill_manual( values = cols)  + theme(legend.title = element_blank(),legend.justification='center',  text = element_text(family = "Helvetica"))+ guides(color=FALSE,size=FALSE)
return(p)
}
data = read.csv(file.path(datapath, 'beh_desc_group12_09-Sep-2024.csv'))
# load packages
library(tidyverse);       # data (frame) handling functions
library(dplyr);
library(ggplot2);
library(ggpubr);          # wrapper package to execute ggplot
library(RColorBrewer)
library(ggnewscale)
# prep environment
# prep environment
rm(list=ls()) # removes all variables
datapath='../../1_data'
path_figs='../../5_figs/study1'
opcolours = c('#ffffff','#ffffff','#ffffff','#ffffff','#ffffff','#ffffff','#ffffff')
bfcolours = c('#A9A9A9','#A9A9A9','#A9A9A9','#7030A0')
yellow    = c('#FFC455')
reds      = c('#C00000','#C00000','#C00000','#C00000','#C00000','#C00000')
yellows   = c('#FFC455','#FFC455','#FFC455','#FFC455','#FFC455','#FFC455')
# make plotting function that works for both data frames
doPlot <- function(data,vars,cols,ylimits,ylab) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='varnames',position= position_dodge(0.75),xlab='', ylab = ylab,ylim = ylimits,) +
geom_hline(yintercept = 0) +
geom_jitter(aes(size=varnames),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=rep(.5,times=length(cols)))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=varnames),position= position_dodge(0.75)) +
scale_color_manual(values = rep('black', times=length(cols))) + # colors just for overlay errorbar
scale_fill_manual( values = cols)   +
theme(plot.title = element_text(hjust = 0.5),plot.margin = margin(l = 15))
#theme(legend.title = element_blank(),legend.justification='center',  text = element_text(family = "Helvetica"))+ guides(color=FALSE,size=FALSE)
return(p)
}
# make function to change labels
adjustLab  <- function(data_frame, column_name, replacements) {
updated_data_frame <- data_frame %>%
mutate({{column_name}} := case_when({{column_name}} %in% names(replacements) ~ replacements[as.character({{column_name}})],
TRUE ~ as.character({{column_name}})))
return(updated_data_frame)
}
# get data
dataO    = read.csv(file.path(datapath, 'Data_study1_copes_D001_opponents.csv'))
# plot opponents
data2plot <- dataO%>%pivot_longer(.,c('dmpfc','pgacc','vmpfc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('dmpfc'='DmPFC','pgacc'='PgACC','tpjleft'='pTPJ (l)','tpjright'='pTPJ (r)','vmpfc'='VmPFC','Amy_Ce'='Amy-Ce','Amy_B'='Amy-B'))
oplot = doPlot(data2plot,'beta',opcolours,c(-50,70),'Effect size (a.u.)')
oplotfinal=ggarrange(oplot,  legend='none')
ggsave(paste('FigS5_opponents_roiplot_',Sys.Date(),'.pdf',sep=''),plot=oplotfinal,path=path_figs,dpi = 300, device = "pdf", height=5,width=7)
# make plotting function that works for both data frames
doPlot <- function(data,vars,cols,ylimits,ylab) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='varnames',position= position_dodge(0.75),xlab='', ylab = ylab,ylim = ylimits,) +
geom_hline(yintercept = 0) +
geom_jitter(aes(size=varnames),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=rep(.5,times=length(cols)))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=varnames),position= position_dodge(0.75)) +
scale_color_manual(values = rep('black', times=length(cols))) + # colors just for overlay errorbar
scale_fill_manual( values = cols)   +
theme(plot.title = element_text(hjust = 0.5),plot.margin = margin(l = 15))
#theme(legend.title = element_blank(),legend.justification='center',  text = element_text(family = "Helvetica"))+ guides(color=FALSE,size=FALSE)
return(p)
}
# make function to change labels
adjustLab  <- function(data_frame, column_name, replacements) {
updated_data_frame <- data_frame %>%
mutate({{column_name}} := case_when({{column_name}} %in% names(replacements) ~ replacements[as.character({{column_name}})],
TRUE ~ as.character({{column_name}})))
return(updated_data_frame)
}
# get data
dataO    = read.csv(file.path(datapath, 'Data_study1_copes_D001_opponents.csv'))
# plot opponents
data2plot <- dataO%>%pivot_longer(.,c('dmpfc','pgacc','vmpfc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
View(dataO)
name(dataO)
names(dataO)
# plot opponents
data2plot <- dataO%>%pivot_longer(.,c('ï..dmpfc','pgacc','vmpfc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('dmpfc'='DmPFC','pgacc'='PgACC','tpjleft'='pTPJ (l)','tpjright'='pTPJ (r)','vmpfc'='VmPFC','Amy_Ce'='Amy-Ce','Amy_B'='Amy-B'))
oplot = doPlot(data2plot,'beta',opcolours,c(-50,70),'Effect size (a.u.)')
oplotfinal=ggarrange(oplot,  legend='none')
ggsave(paste('FigS5_opponents_roiplot_',Sys.Date(),'.pdf',sep=''),plot=oplotfinal,path=path_figs,dpi = 300, device = "pdf", height=5,width=7)
View(data2plot)
names[dataO]
names(dataO)
names(dataO)[1] ='dmpfc'
names(dataO)
# plot opponents
data2plot <- dataO%>%pivot_longer(.,c('dmpfc','pgacc','vmpfc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('dmpfc'='DmPFC','pgacc'='PgACC','tpjleft'='pTPJ (l)','tpjright'='pTPJ (r)','vmpfc'='VmPFC','Amy_Ce'='Amy-Ce','Amy_B'='Amy-B'))
oplot = doPlot(data2plot,'beta',opcolours,c(-50,70),'Effect size (a.u.)')
oplotfinal=ggarrange(oplot,  legend='none')
ggsave(paste('ExtData_Fig3a_opponents_roiplot_',Sys.Date(),'.pdf',sep=''),plot=oplotfinal,path=path_figs,dpi = 300, device = "pdf", height=5,width=7)
datab    = read.csv(file.path(datapath, 'Data_study1_copes_D002_cope28.csv'))
datadv   = read.csv(file.path(datapath, 'Data_study1_copes_D003_cope31.csv'))
View(datab)
View(datadv)
names(datab)[1] ='dmpfc'
names(datadv)[1] ='dmpfc'
View(datab)
View(datadv)
# plot basis functions
data2plot <- datab%>%pivot_longer(.,c('dmpfc','vmpfc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('dmpfc'='DmPFC','tpjleft'='pTPJ (l)','tpjright'='pTPJ (r)','vmpfc'='VmPFC','Amy_Ce'='Amy-Ce','Amy_B'='Amy-B'))
bplot = doPlot(data2plot,'beta',yellows,c(-2000,4000),'Effect size (a.u.)')
# Plot DV
data2plot <- datadv%>%pivot_longer(.,c('dmpfc','pgacc','tpjleft','tpjright','Amy_Ce','Amy_B'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('dmpfc'='DmPFC','pgacc'='PgACC','tpjleft'='pTPJ (l)','tpjright'='pTPJ (r)','Amy_Ce'='Amy-Ce','Amy_B'='Amy-B'))
dvplot = doPlot(data2plot,'beta',reds,c(-200,150),'Effect size (a.u.)')
copeplotfinal=ggarrange(bplot,dvplot, ncol=1,nrow=2, labels=c('B','A'), align='hv', legend='none',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('FigS14_copeplot_roiplot_',Sys.Date(),'.pdf',sep=''),plot=copeplotfinal,path=path_figs,dpi = 300, device = "pdf", height=12,width=6)
copeplotfinal=ggarrange(bplot,dvplot, ncol=1,nrow=2, labels=c('g','e'), align='hv', legend='none',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig6ge_copeplot_roiplot_',Sys.Date(),'.pdf',sep=''),plot=copeplotfinal,path=path_figs,dpi = 300, device = "pdf", height=12,width=6)
data    = read.csv(file.path(datapath, 'Data_study1_timecourse_barplot.csv'))
data1   = data.frame(data$tc_cont,data$tc_pair,data$tc_ends,data$sumperf)
data_pos= data.frame(data$S_timepos)
View(data)
# plot basis functions and null
data2plot <- data1%>%pivot_longer(.,c('data.tc_cont','data.tc_pair','data.tc_ends','data.sumperf'),names_to=c('varnames'),values_to ='beta')
data2plot <- adjustLab(data2plot, varnames,  c('data.tc_cont'='b1','data.tc_pair'='b2','data.tc_ends'='b3','data.sumperf'='null'))
bfplot = doPlot(data2plot,'beta',bfcolours,c(-.25,.25),'Effect size (a.u.)')
# plot S-position
data2plotpos <- data_pos%>%pivot_longer(.,c('data.S_timepos'),names_to=c('varnames'),values_to ='beta')
data2plotpos <- adjustLab(data2plotpos, varnames,  c('data.S_timepos'='S-position'))
posplot = doPlot(data2plotpos,'beta',yellow,c(-.25,.25),'Effect size (a.u.)')
allbfplots=ggarrange(bfplot,posplot, ncol=2,nrow=1,widths = c(2,1), labels=c('A','B'), align='hv', legend='none',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('FigS7_bf_roiplot_',Sys.Date(),'.pdf',sep=''),plot=allbfplots,path=path_figs,dpi = 300, device = "pdf", height=3,width=4)
# plot S-position
data2plotpos <- data_pos%>%pivot_longer(.,c('data.S_timepos'),names_to=c('varnames'),values_to ='beta')
data2plotpos <- adjustLab(data2plotpos, varnames,  c('data.S_timepos'='S-position'))
posplot = doPlot(data2plotpos,'beta',yellow,c(-.25,.25),'Effect size (a.u.)')
allbfplots=ggarrange(bfplot,posplot, ncol=2,nrow=1,widths = c(2,1), labels=c('b','c'), align='hv', legend='none',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ggsave(paste('ExtData_Fig3bc_bf_roiplot_',Sys.Date(),'.pdf',sep=''),plot=allbfplots,path=path_figs,dpi = 300, device = "pdf", height=3,width=4)
# load packages
library(tidyverse);       # data (frame) handling functions
library(dplyr);
library(ggplot2);
library(ggpubr);          # wrapper package to execute ggplot
library(RColorBrewer)
library(ggnewscale)
# prep environment
rm(list=ls()) # removes all variables
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
datapath='../../3_out/study2'
path_figs='../../5_figs/study2'
yellows = c('#FFEDAD','#FFC455')
darkyellows = c('#e9cd62','#fca400')
blues   = c('#93A3FF','#5044FF')
#otherblues = c('#C0C8F8')# for points of sigmoid plot
##########################################################################################################################################################################
# 1. % correct choice
##########################################################################################################################################################################
# get data
data = read.csv(file.path(datapath, 'Desc_pcorr09-Sep-2024.csv'))
# prepare data for plotting:
data2plot_cors1 =data%>%pivot_longer(.,c('corS1'),names_to='varnames',values_to ='correct')%>%mutate(group=as.factor(group),
varnames = recode(varnames,'corS1'='Self'),
group = recode(group,'0' = 'No-group','1'='Group'))
data2plot_cors2 =data%>%pivot_longer(.,c('corS2'),names_to='varnames',values_to ='correct')%>%mutate(group=as.factor(group),
varnames = recode(varnames,'corS2'='Self'),
group = recode(group,'0' = 'No-group','1'='Group'))
data2plot_corp1 =data%>%pivot_longer(.,c('corP1'),names_to='varnames',values_to ='correct')%>%mutate(group=as.factor(group),
varnames = recode(varnames,'corP1'='Partner'),
group = recode(group,'0' = 'No-group','1'='Group'))
data2plot_corp2 =data%>%pivot_longer(.,c('corP2'),names_to='varnames',values_to ='correct')%>%mutate(group=as.factor(group),
varnames = recode(varnames,'corP2'='Partner'),
group = recode(group,'0' = 'No-group','1'='Group'))
# make plotting function that works for both data frames
doPairedBarPlot <- function(data, vars,cols) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='group',group = 'group',position= position_dodge(0.75),xlab='',ylab = '% correct decisions',ylim = c(.4, 1),) +
scale_fill_manual( values = cols) +
geom_jitter(aes(size=group),position=position_jitterdodge(jitter.width = 0.2),color='grey') +
scale_size_manual(values=c(0.2,0.2))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=group),position= position_dodge(0.75)) +
scale_color_manual(values = c('black','black')) + # colors just for overlay errorbar
geom_hline(yintercept = 0) +
theme(legend.title = element_blank(),legend.direction='vertical', text = element_text(family = "Helvetica") ) + guides(color=FALSE,size=FALSE) # legend.justification='right')
return(p)
}
# Make plots and arrange
corplots1 = doPairedBarPlot(data2plot_cors1,'correct',yellows)
corplots2 = doPairedBarPlot(data2plot_cors2,'correct',yellows)
corplotp1 = doPairedBarPlot(data2plot_corp1,'correct',blues)
corplotp2 = doPairedBarPlot(data2plot_corp2,'correct',blues)
dataS = read.csv(file.path(datapath, 'VD_S_09-Sep-2024.csv'))
dataP = read.csv(file.path(datapath, 'VD_P_09-Sep-2024.csv'))
# prepare data for plotting:
data2plot_S = dataS%>%pivot_longer(.,c('m4','m3','m2','m1','N','p1','p2','p3','p4'),names_to='varnames',values_to ='% Self chosen')%>%mutate(group=as.factor(group),
varnames2plot = ifelse(varnames=='m4', -4, ifelse (varnames=='m3',-3,ifelse (varnames=='m2',-2,ifelse (varnames=='m1',-1, ifelse (varnames=='N',0, ifelse (varnames=='p1',1,
ifelse (varnames=='p2',2, ifelse (varnames=='p3',3,ifelse (varnames=='p4',4,NA))))))))))
data2plot_P = dataP%>%pivot_longer(.,c('m4','m3','m2','m1','N','p1','p2','p3','p4'),names_to='varnames',values_to ='% Partner chosen')%>%mutate(group=as.factor(group),
varnames2plot = ifelse(varnames=='m4', -4, ifelse (varnames=='m3',-3,ifelse (varnames=='m2',-2,ifelse (varnames=='m1',-1, ifelse (varnames=='N',0, ifelse (varnames=='p1',1,
ifelse (varnames=='p2',2, ifelse (varnames=='p3',3,ifelse (varnames=='p4',4,NA))))))))))
doPairedPlot <- function(data,ylab,xlabin,scaleinfo,cols) {
p <- ggscatter(data,'varnames2plot',ylab,color='group',position= position_dodge(0.4),xlab=xlabin,size=0.5,show_guide=F) + #color='group',shape=21
scale_color_manual(values=c('grey','darkgrey'),guide='none') +
new_scale_colour()+
stat_summary(fun='mean', geom='line',lwd=1,aes(color=group)) + stat_summary(fun='mean', geom='point',size=2.5,aes(color=group)) + stat_summary(fun.data=mean_se, geom='linerange',lwd=1.5, show.legend=FALSE,aes(color=group)) +
scale_color_manual(values = cols,name=element_blank(),labels=c('No-group','Group')) +
scale_x_continuous(breaks=scaleinfo) + theme_pubr() +  theme(legend.justification='center', text = element_text(family = "Helvetica") )
return(p)
}
Splot_vd  = doPairedPlot(data2plot_S,'% Self chosen','S - Or',c(-4:4),darkyellows)
Pplot_vd  = doPairedPlot(data2plot_P,'% Partner chosen', 'P - Or',c(-4:4),blues)
# get data
dataSl = read.csv(file.path(datapath, 'GLMclassic_S_09-Sep-2024.csv'))
dataPl = read.csv(file.path(datapath, 'GLMclassic_P_09-Sep-2024.csv'))
# prepare data for plotting:
data2plot_Sl = dataSl%>%pivot_longer(.,c('S','P','Or','Oi','bonus'),names_to='varnames',values_to ='betas')%>%mutate(group=as.factor(group),
group = recode(group,'0' = 'No-group','1'='Group'))
data2plot_Pl = dataPl%>%pivot_longer(.,c('S','P','Or','Oi','bonus'),names_to='varnames',values_to ='betas')%>%mutate(group=as.factor(group),
group = recode(group,'0' = 'No-group','1'='Group'))
# make plotting function that works for both data frames
doBetaPlot <- function(data,cols) {
p <- ggbarplot(data,'varnames','betas',add='mean_se',fill='group',position= position_dodge(0.75),xlab='',ylab = 'Decision weight')  +
geom_hline(yintercept = 0) +
geom_jitter(aes(size=group),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=c(0.05,0.05))+ # use size as an aesthetic to differ between groups
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=group),position= position_dodge(0.75)) +
scale_color_manual(values = c('black','black')) + # colors just for overlay errorbar
scale_fill_manual( values = cols)  + theme(legend.title = element_blank(),legend.justification='center',  text = element_text(family = "Helvetica"))+ guides(color=FALSE,size=FALSE)
return(p)
}
Splotglm = doBetaPlot(data2plot_Sl,yellows)
Pplotglm = doBetaPlot(data2plot_Pl,blues)
MAINplot=ggarrange(corplots1,Splot_vd,Splotglm,corplotp1,Pplot_vd,Pplotglm,ncol=3,nrow=2,heights=c(1,1),widths = c(1,1.5,1.5), labels=c('D','F','H','E','G','I'),align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
MAINplot
SUPplot=ggarrange(corplots2,corplotp2,ncol=2,nrow=2,heights=c(1,1),widths = c(1,1), labels=c('A','B'),align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
SUPplot
SUPplot=ggarrange(corplots2,corplotp2,ncol=2,nrow=2,heights=c(1,1),widths = c(1,1), labels=c('c','d'),align='hv',
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
#SUPplot
ggsave(paste('ExtData_Fig8cd_',Sys.Date(),'.pdf',sep=''),plot=SUPplot,path=path_figs,dpi = 300, device = "pdf")
# load packages
library(tidyverse);       # data (frame) handling functions
library(dplyr);
library(ggplot2);
library(ggpubr);          # wrapper package to execute ggplot
library(RColorBrewer)
library(ggnewscale)
# prep environment
rm(list=ls()) # removes all variables
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
datapath='../../1_data'
path_figs='../../5_figs/study3'
dataSocialSpecifity   = read.csv(file.path(datapath, 'Data_study3_copes_socialSpecificity_13-Dec-2023.csv'))
dataBFs               = read.csv(file.path(datapath, 'Data_study3_copes_basisFunctions_13-Dec-2023.csv'))
dataInvertedBFs       = read.csv(file.path(datapath, 'Data_study3_copes_InvertedBFs_02-Sep-2024.csv'))
dataMotorDV           = read.csv(file.path(datapath, 'Data_study3_copes_motorDV_02-Sep-2024.csv'))
bfcolours = c('#A9A9A9','#A9A9A9','#A9A9A9')
yellow    = c('#FFC455')
blue      = c('#93A3FF')
red       = c('#D2232B')
lightblue = c('#59B6D1')
#### general plotting function:
# make plotting function that works for both data frames
doPlot <- function(data,vars,cols,ylimits,ylab,title) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='varnames',position= position_dodge(0.75),xlab='', ylab = ylab,ylim = ylimits,) +
geom_hline(yintercept = 0) +
geom_jitter(aes(size=varnames),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=rep(.5,times=length(cols)))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=varnames),position= position_dodge(0.75)) +
scale_color_manual(values = rep('black', times=length(cols))) + # colors just for overlay errorbar
scale_fill_manual( values = cols)  +
ggtitle(title)+
theme_pubr() +  theme(plot.title = element_text(hjust = 0.5),plot.margin = margin(l = 15))
return(p)
}
# make function to change labels
adjustLab  <- function(data_frame, column_name, replacements) {
updated_data_frame <- data_frame %>%
mutate({{column_name}} := case_when({{column_name}} %in% names(replacements) ~ replacements[as.character({{column_name}})],
TRUE ~ as.character({{column_name}})))
return(updated_data_frame)
}
ylab = 'Effect size (a.u.)'
##########################################################################################################################################################################
# 1. Social specificity
##########################################################################################################################################################################
# get data
data     = dataSocialSpecifity
dataS    = data.frame(data$Motor.S.in.pgACC)
dataP    = data.frame(data$Motor.P.in.dmPFC)
# plot self and other
data2plotS <- dataS%>%pivot_longer(.,c('data.Motor.S.in.pgACC'),names_to=c('varnames'),values_to ='COPE')
data2plotS <- adjustLab(data2plotS, varnames,  c('data.Motor.S.in.pgACC'='Motor-S in pgACC'))
data2plotP <- dataP%>%pivot_longer(.,c('data.Motor.P.in.dmPFC'),names_to=c('varnames'),values_to ='COPE')
data2plotP <- adjustLab(data2plotP, varnames,  c('data.Motor.P.in.dmPFC'='Motor-P in dmPFC'))
data2plotSP = rbind(data2plotS,data2plotP)
SPplot     = doPlot(data2plotSP,'COPE',c(yellow,blue),c(-50,50),ylab,'')
data       = dataBFs
pgacc_mean = data.frame(data$mean.tc.in.pagacc)
pgacc_tcs  = data.frame(data$tc1.in.pagacc,data$tc2.in.pagacc,data$tc3.in.pagacc)
fpole_tcs  = data.frame(data$tc1.in.fpole,data$tc2.in.fpole,data$tc3.in.fpole)
# plot pgacc
data2plot <- pgacc_mean%>%pivot_longer(.,c('data.mean.tc.in.pagacc'),names_to=c('varnames'),values_to ='COPE')
data2plot <- adjustLab(data2plot, varnames,  c('data.mean.tc.in.pagacc'='Mean motor-bs'))
bfMeanPlot= doPlot(data2plot,'COPE',bfcolours,c(-600,800),ylab,'')
data2plot <- pgacc_tcs%>%pivot_longer(.,c('data.tc1.in.pagacc','data.tc2.in.pagacc','data.tc3.in.pagacc'),names_to=c('varnames'),values_to ='COPE')
data2plot <- adjustLab(data2plot, varnames,  c('data.tc1.in.pagacc'='b1','data.tc2.in.pagacc'='b2','data.tc3.in.pagacc'='b3'))
bfPlotpgacc= doPlot(data2plot,'COPE',bfcolours,c(-400,600),ylab,'')
# plot frontal pole
data2plot <- fpole_tcs%>%pivot_longer(.,c('data.tc1.in.fpole','data.tc2.in.fpole','data.tc3.in.fpole'),names_to=c('varnames'),values_to ='COPE')
data2plot <- adjustLab(data2plot, varnames,  c('data.tc1.in.fpole'='b1','data.tc2.in.fpole'='b2','data.tc3.in.fpole'='b3'))
bfPlotfpole = doPlot(data2plot,'COPE',bfcolours,c(-300,800),ylab,'')
# make empty plot too help arranging
emptyPlot = plot(1, type = 'n', axes = FALSE, xlab = '', ylab = '', main = '')
data = dataMotorDV
data2plot <- data%>%pivot_longer(.,c('Motor.DV.in.vmpfc'),names_to=c('varnames'),values_to ='COPE')
data2plot <- adjustLab(data2plot, varnames,  c('Motor.DV.in.vmpfc'='Motor-DV'))
dvplot = doPlot(data2plot,'COPE',red,c(-100,100),ylab,'')
data = dataInvertedBFs
data2plot <- data%>%pivot_longer(.,c('DmPFC','lPFC','vStr'),names_to=c('varnames'),values_to ='COPE')
invBFplot = doPlot(data2plot,'COPE',c(lightblue,lightblue,lightblue),c(-100,100),ylab,'')
Socplots  =ggarrange(SPplot, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
pgaccplots=ggarrange(bfMeanPlot, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
fpoleplots=ggarrange(bfPlotfpole, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
MOTORPLOTS1=ggarrange(emptyPlot,Socplots,emptyPlot,pgaccplots,emptyPlot,fpoleplots,ncol=6,nrow=1,widths = c(1,1,1,.6,1.4,1),align='hv', labels=c('F','','G','','H','I'),font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'), legend='none')
MOTORPLOTS1
invBFplots  =ggarrange(invBFplot, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
dvplots    =ggarrange(dvplot, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
MOTORPLOTS2=ggarrange(emptyPlot,emptyPlot,invBFplots,emptyPlot,emptyPlot,dvplots,ncol=6,nrow=1,widths = c(1,1,1.6,0.4,1,1),align='hv', labels=c('J','','K','L','','M'),font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'), legend='none')
upperplaceholder    = ggarrange(emptyPlot,emptyPlot,emptyPlot,emptyPlot,emptyPlot,ncol=5,nrow=1,widths = c(1,1,1,1,1,1),labels=c('A','B','C','D','E'), font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
ALLPLOTS = ggarrange(upperplaceholder,MOTORPLOTS1,MOTORPLOTS2,ncol=1,nrow=3,heights=c(1,1),widths = c(1,1),align='hv')
ALLPLOTS
supplot  =ggarrange(bfPlotpgacc, ncol=1,nrow=1,widths = c(1,1), align='hv', legend='none')
supplot
ggsave(paste('ExtData_Fig10h_MotorResults_Supplements',Sys.Date(),'.pdf',sep=''),plot=supplot,path=path_figs,dpi = 300, device = "pdf", height=5,width=5)
# load packages
library(tidyverse);       # data (frame) handling functions
library(dplyr);
library(ggplot2);
library(ggpubr);          # wrapper package to execute ggplot
library(RColorBrewer)
library(ggnewscale)
# prep environment
rm(list=ls()) # removes all variables
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
datapath='../../3_out/study4'
path_figs='../../5_figs/study4'
col = c('#b2df8a','#568c26','#b192d3','#583380')
greycol =c('#d9d9d9','#737373','#a6a6a6','#333333')
#### general plotting function:
doBarPlot <- function(data,vars,cols,ylimits,ylab,fct) {
p <- ggbarplot(data,'varnames',vars,add='mean_se',fill='group',position = position_dodge(0.75),ylim = ylimits,facet.by = fct,xlab='', ylab = ylab) + #
geom_hline(yintercept = 0) +
geom_jitter(aes(size=group),position=position_jitterdodge(jitter.width = 0.1),color='grey') +
scale_size_manual(values=c(.5,.5,.5,.5))+
stat_summary(fun.data="mean_se", geom="errorbar",width=0.2,aes(color=group),position= position_dodge(0.75)) +
scale_color_manual(values = c('black','black','black','black')) + # colors just for overlay errorbar
scale_fill_manual(values = cols) +
theme_pubr() + theme(legend.title = element_blank(),legend.justification='center',  text = element_text(family = "Helvetica"),
strip.background = element_blank(),strip.text.x = element_blank()) + guides(color=FALSE,size=FALSE)
return(p)
};
# make function to change labels
adjustLab  <- function(data_frame, column_name, replacements) {
updated_data_frame <- data_frame %>%
mutate({{column_name}} := case_when({{column_name}} %in% names(replacements) ~ replacements[as.character({{column_name}})],
TRUE ~ as.character({{column_name}})))
return(updated_data_frame)
}
# line plot with data
doDataLinePlot <- function(data,ylab,xlabin,scaleinfo,cols) {
p <- ggscatter(data,'varnames2plot',ylab,color='schedule',fill='schedule',position= position_jitterdodge(jitter.width = 0.03,jitter.height=0.3, dodge.width = 0.4,seed = 1) ,xlab=xlabin,size=0.01,show_guide=F) + #color='group',shape=21
scale_color_manual(values=greycol,guide='none') +
new_scale_colour()+
stat_summary(fun='mean', geom='line',lwd=1,aes(color=schedule), position = position_dodge(width=0.2)) +
stat_summary(fun='mean', geom='point',size=2.5, show.legend=FALSE, aes(color=schedule), position = position_dodge(width=0.2)) +
stat_summary(fun.data=mean_se, geom='linerange',lwd=1.5, show.legend=FALSE,aes(color=schedule), position = position_dodge(width=0.2)) +
scale_color_manual(values = cols,name=element_blank()) +
scale_x_continuous(breaks=scaleinfo) + theme_pubr() +  theme(legend.justification='center', text = element_text(family = "Helvetica"))
return(p)
};
dataRat = read.csv(file.path(datapath, 'PosRating_09-Sep-2024.csv'))
dataFre = read.csv(file.path(datapath, 'PosFrequency_09-Sep-2024.csv'))
data2plot = dataRat%>%pivot_longer(.,c('rat1','rat2','rat3','rat4'),names_to='varnames',values_to ='Attention rating')%>%mutate(schedule=as.factor(schedule),
schedule     = str_replace(schedule,'3p','3/p') %>% str_replace(.,'4p','4/p') %>% factor(.,levels=c('pre3/post3','pre4/post3','pre3/post4','pre4/post4')),
varnames2plot = ifelse(varnames=='rat1', 1, ifelse (varnames=='rat2',2,ifelse (varnames=='rat3',3,ifelse (varnames=='rat4',4,NA)))))
RATING  = doDataLinePlot(data2plot,'Attention rating','Sequential position',c(1:4),col)
# make schedule plot
freq = dataFre%>%pivot_longer(.,c('pos1','pos2','pos3','pos4'),names_to='varnames',values_to ='Frequency')%>%mutate(schedule=as.factor(schedule),
group     = str_replace(schedule,'3p','3/p') %>% str_replace(.,'4p','4/p') %>% factor(.,levels=c('pre3/post3','pre4/post3','pre3/post4','pre4/post4')), # factor to determine legend item order
varnames2plot = ifelse(varnames=='pos1', 1, ifelse (varnames=='pos2',2,ifelse (varnames=='pos3',3,ifelse (varnames=='pos4',4,NA)))))
FREQUENCY = ggplot(freq, aes(x=varnames2plot, y=Frequency, group=group)) +
geom_line(aes(color=group),lwd=1,position=position_dodge(width=.1))+
geom_point(aes(color=group),size=2.5,position=position_dodge(width=.1))+scale_color_manual(values=col) +
theme_pubr()+
coord_cartesian(ylim = c(0,1))
# get data
data = read.csv(file.path(datapath, 'GLMpos_09-Sep-2024.csv'))
# prepare data for plotting:
data2plot <- data %>%
pivot_longer(.,c('p3_test','p4_test'),names_to=c('varnames'),values_to ='beta') %>%
mutate(post3_inv = abs(1-post3), # separate inverted post3 variable to order facets in plot correctly
group     = str_replace(schedule,'3p','3/p') %>% str_replace(.,'4p','4/p') %>% factor(.,levels=c('pre3/post3','pre4/post3','pre3/post4','pre4/post4')) # factor to determine legend item order
) %>%
adjustLab(., varnames,  c('p3_test'='Pos3','p4_test'='Pos4'))
POS3 = doBarPlot(data=data2plot%>%filter(varnames=='Pos3'),vars='beta',cols=col,ylimits=c(-1,1.5),'Decision weights',fct='post3_inv')
POS4 = doBarPlot(data=data2plot%>%filter(varnames=='Pos4'),vars='beta',cols=col,ylimits=c(-1,1.5),'Decision weights',fct='post3_inv')
# same plot as below with legends per subplot. just for error checking
#ggarrange(FREQUENCY, RATING, POS3, POS4,ncol=2,nrow=2,heights=c(1,1),widths = c(1,1), labels=c('B','C','D','E'),
#                     font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'))
s2btplot = ggarrange(FREQUENCY, RATING, POS3, POS4,ncol=2,nrow=2,heights=c(1,1),widths = c(1,1), labels=c('B','C','D','E'),
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'),common.legend = T, legend = 'right')
s2btplot
s2btplot = ggarrange(FREQUENCY, RATING, POS3, POS4,ncol=2,nrow=2,heights=c(1,1),widths = c(1,1), labels=c('b','c','d','e'),
font.label = list(size = 30, color = "black", face = "bold", family = 'Helvetica'),common.legend = T, legend = 'right')
ggsave(paste('ExtData4_',Sys.Date(),'.pdf',sep=''),plot=s2btplot,path=path_figs,dpi = 300, device = "pdf", height=7,width=6)
ggsave(paste('ExtData_Fig4',Sys.Date(),'.pdf',sep=''),plot=s2btplot,path=path_figs,dpi = 300, device = "pdf", height=7,width=6)
ggsave(paste('ExtData_Fig4_',Sys.Date(),'.pdf',sep=''),plot=s2btplot,path=path_figs,dpi = 300, device = "pdf", height=7,width=6)
